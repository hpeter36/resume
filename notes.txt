pdf generálás
	"html to pdf javascript"
	dom -> canvas -> pdf
		így a szöveg nem kiválasztható
		vonalkód se látszódik eléggé
		text gradienteket nem jól kezeli(html2canvas), svg-ben kellett megoldani
	jsPDF dom html -> pdf ?
		lehet hogy inline styleokat kell használni, objectben megadva az oldal struktúrának megfelelően
		style = styleObj.div
	chrome extension-t használó cucc puppeteer
		csak képként exportál
		szerintem itt nincs css limitáció mint html2canvas esetén
		csak backenden fut "next js puppeteer pdf"
			https://dev.to/jordykoppen/turning-react-apps-into-pdfs-with-nextjs-nodejs-and-puppeteer-mfi
		!!! "The biggest advantage of Puppeteer is that it creates an actual PDF file with text content instead of just using an image. You’ll be able to select and copy the text from the PDF, and you don’t need to worry about resolution since it’ll always be sharp. Additionally, the file size is significantly lower; compared to the html2pdf example"
		https://react.dev/reference/react-dom/server/renderToStaticMarkup
			renderToString
		https://medium.com/knowsi/exporting-pdfs-with-next-js-714735f0a473
			"Getting the PDF" rész
	print to pdf js?
		nem lehetséges
	react-pdf
		interactive pdf with searchable text, links, pdf annotations
		you'll need to implement your own components that targets both the DOM and PDF
	html2pdf
		html2canvas + jsPDF under the hood
		html2pdf().set({ html2canvas: { scale: 4 } }).from(element).save();

	https://github.com/diegomura/react-pdf
	https://medium.com/swlh/making-a-resume-in-html-or-react-bd1781abcdef
		https://github.com/puppeteer/puppeteer
	https://github.com/kwokwilliam/Web-Based-Resume

	puppeter lesz a jó választás

print mode
	a fix méretek pontosan megjelenek a nyomtatási képben overflowolva, eg. width 200px

queryselector helyett useref, szerintem azonnal elérem az elemet
minden comp input fogadjon be a containerének megfelelő propokat is
	a containernek opcionálisan lehessen megadni pozícionális propokat
minden külön fileba még a kicsi komponensek is

html gradient text vissza
leválasztani a raw resume adatokat a style adatoktól
minden compba részletes input data, styles
elrendezni tökéletes A4 print export-ra
saját adatok, küldözgetni

tömörebb több vázlatpont az experiencehez

element styleokhoz elég egy classTw, ahol megadok minden egyéb style-t, a flowbite react projectben van class prop merge kód is
	ha változóban van a teljes tw string nem fordítja bele...

a4 papíron legyen y overflow-olva, látszódjon + alert ha túlmegy, alul vagy balfent egy piros box felkiáltójel svg elején + szöveg hogy mi van
	"css a4 portrait"
	https://stackoverflow.com/questions/16649943/css-to-set-a4-paper-size

az egész alapja A4-es lapok legyenek, amire lehet bepakolni az elemeket, mint egy editor
ha megtelik bejön egy újabb
az egész teljesen pdf print illetve print nézet egyenlő
méretezhetőek az elemek, opcionálisak
úgy kellene hogy ne csak IT kompatibilis legyen, bárki megcsinálhassa a CV-jét
szerkesztés nagyrészt az editorban kellene történnnie
elég csak a meglévő elemek szerkeszthetősége egyenlőre

git checkin
print to pdf puppeteer, legyen olyan mint amit kézzel kiexpozók
edit cv feature
user kezelés
save to db
html megosztás mód

!!!!!!!!!!! ha kijelölöm a contact szövegét(Chrome), akár 1 karakter-t akkor 1 A4 oldalon képes kinyomtatni, ellenkező esetben képtelen..... !!!!!!!!
	kell hozzá a Deepl chrome bővítmény, engedélyezni kell h a fordítás ikon felugorjon ha kijelölök egy szöveget...agyfasssszz
	fejlesztői mód ne legyen aktív
	